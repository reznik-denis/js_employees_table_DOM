{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tBody = table.tBodies[0];\nconst tHead = table.tHead;\nconst tHeadCells = tHead.rows[0].cells;\n\ntable.insertAdjacentHTML(\n  'afterend',\n  `<form class=\"new-employee-form\">\n    <label>Name: <input id=\"name\" name=\"name\" type=\"text\" data-qa=\"name\"></label>\n    <label>Position: <input id=\"position\" name=\"position\" type=\"text\" data-qa=\"position\"></label>\n    <label>Office: <select id=\"office\" name=\"office\" data-qa=\"office\">\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select></label>\n    <label>Age: <input id=\"age\" name=\"age\" type=\"number\" data-qa=\"age\" required></label>\n    <label>Salary: <input id=\"salary\" name=\"salary\" type=\"number\" data-qa=\"salary\" required></label>\n    <button type=\"submit\">Save to table</button>\n  </form>`,\n);\n\nconst form = document.querySelector('.new-employee-form');\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const nameEmployee = document.getElementById('name').value.trim();\n\n  if (validation(nameEmployee, 'name')) {\n    return;\n  }\n\n  const positionEmployee = document.getElementById('position').value.trim();\n\n  if (validation(positionEmployee, 'position')) {\n    return;\n  }\n\n  const offiseEmployee = document.getElementById('office').value;\n  const ageEmployee = document.getElementById('age').value;\n\n  if (validation(ageEmployee, 'age')) {\n    return;\n  }\n\n  const salaryEmployee = document.getElementById('salary').value;\n  const convertSalaryEmployee = convertToUSD(salaryEmployee);\n\n  tBody.insertAdjacentHTML(\n    'beforeend',\n    `<tr>\n      <td>${nameEmployee}</td>\n      <td>${positionEmployee}</td>\n      <td>${offiseEmployee}</td>\n      <td>${ageEmployee}</td>\n      <td>${convertSalaryEmployee}</td>\n    </tr>`,\n  );\n\n  pushNotification(\n    10,\n    10,\n    'Success',\n    'Success add.\\n ' + 'New employee added succesfuly.',\n    'success',\n  );\n\n  form.reset();\n});\n\nconst clicksCounter = [0, 0, 0, 0, 0];\n\nfor (let i = 0; i < tHeadCells.length; i++) {\n  tHeadCells[i].addEventListener('click', function () {\n    const tableBody = document.querySelector('table').tBodies[0];\n    const tableRows = [...tableBody.rows];\n\n    tableRows.sort((a, b) => {\n      const cellA = a.cells[i].innerText.toLowerCase();\n      const cellB = b.cells[i].innerText.toUpperCase();\n\n      if (clicksCounter[i] % 2 === 0) {\n        return sortTable(cellA, cellB);\n      } else {\n        return sortTable(cellB, cellA);\n      }\n    });\n\n    clicksCounter[i] = clicksCounter[i] + 1;\n\n    tableRows.forEach((row) => {\n      tableBody.append(row);\n    });\n  });\n}\n\nlet currentActiveTr;\n\ntBody.addEventListener('click', (e) => {\n  const newTr = e.target.closest('tr');\n\n  newTr.classList.add('active');\n\n  if (currentActiveTr !== newTr) {\n    if (currentActiveTr) {\n      currentActiveTr.classList.remove('active');\n    }\n    currentActiveTr = newTr;\n  }\n});\n\ntBody.addEventListener('dblclick', (e) => {\n  const changeCells = e.target;\n  const changeCellIndex = changeCells.cellIndex;\n  const contentCell = changeCells.textContent;\n\n  changeCells.textContent = '';\n\n  switch (changeCellIndex) {\n    case 0:\n      changeCells.insertAdjacentHTML(\n        'beforeend',\n        `<input class=\"cell-input\" id=\"changeCell\" name=\"name\" type=\"text\">`,\n      );\n      break;\n\n    case 1:\n      changeCells.insertAdjacentHTML(\n        'beforeend',\n        `<input class=\"cell-input\" id=\"changeCell\" name=\"position\" type=\"text\">`,\n      );\n      break;\n\n    case 2:\n      changeCells.insertAdjacentHTML(\n        'beforeend',\n        `<select class=\"cell-input\" id=\"changeCell\" name=\"office\">\n          <option value=\"Tokyo\">Tokyo</option>\n          <option value=\"Singapore\">Singapore</option>\n          <option value=\"London\">London</option>\n          <option value=\"New York\">New York</option>\n          <option value=\"Edinburgh\">Edinburgh</option>\n          <option value=\"San Francisco\">San Francisco</option>\n        </select>`,\n      );\n      break;\n\n    case 3:\n      changeCells.insertAdjacentHTML(\n        'beforeend',\n        `<input class=\"cell-input\" id=\"changeCell\" name=\"age\" type=\"number\">`,\n      );\n      break;\n\n    case 4:\n      changeCells.insertAdjacentHTML(\n        'beforeend',\n        `<input class=\"cell-input\" id=\"changeCell\" name=\"salary\" type=\"number\">`,\n      );\n      break;\n  }\n\n  const inputText = document.getElementById('changeCell');\n\n  inputText.focus();\n\n  inputText.addEventListener('blur', changedCells);\n\n  inputText.addEventListener('keydown', (evt) => {\n    if (evt.code === 'Enter') {\n      changedCells();\n    }\n  });\n\n  function changedCells() {\n    const inputTextValue = inputText.value.trim();\n\n    if (\n      inputTextValue.length > 0 &&\n      !validateCahgeCell(inputTextValue, changeCellIndex)\n    ) {\n      if (changeCellIndex === 4) {\n        changeCells.textContent = convertToUSD(inputTextValue);\n      } else {\n        changeCells.textContent = inputTextValue;\n      }\n    } else {\n      changeCells.textContent = contentCell;\n    }\n\n    inputText.remove();\n  }\n});\n\nfunction pushNotification(posTop, posRight, title, description, type) {\n  const nottification = document.createElement('div');\n\n  document.querySelector('body').append(nottification);\n\n  nottification.classList.add('notification');\n  nottification.classList.add(type);\n  nottification.setAttribute('data-qa', 'notification');\n  nottification.style.top = `${posTop}px`;\n  nottification.style.right = `${posRight}px`;\n\n  nottification.insertAdjacentHTML(\n    'beforeend',\n    `\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>`,\n  );\n\n  setTimeout(() => {\n    nottification.remove();\n  }, 2000);\n}\n\nfunction sortTable(cellA, cellB) {\n  return cellA.localeCompare(cellB, undefined, { numeric: true });\n}\n\nfunction validation(text, type) {\n  switch (type) {\n    case 'name':\n      if (text.length < 4) {\n        pushNotification(\n          10,\n          10,\n          'Error',\n          'Name wrong.\\n ' + 'Length of name should have length more than 4.',\n          'error',\n        );\n\n        return true;\n      }\n      break;\n\n    case 'age':\n      if (text < 18 || text > 90) {\n        pushNotification(\n          10,\n          10,\n          'Error',\n          'Age wrong.\\n ' + 'Age have to be more than 18 and less than 90.',\n          'error',\n        );\n\n        return true;\n      }\n      break;\n\n    case 'position':\n      if (!text) {\n        pushNotification(\n          10,\n          10,\n          'Error',\n          'Position wrong.\\n ' + 'Position have to be entered.',\n          'error',\n        );\n\n        return true;\n      }\n      break;\n\n    default:\n      return false;\n  }\n}\n\nfunction validateCahgeCell(text, index) {\n  switch (index) {\n    case 0:\n      return validation(text, 'name');\n\n    case 1:\n      return validation(text, 'position');\n\n    case 3:\n      return validation(text, 'age');\n\n    default:\n      return false;\n  }\n}\n\nfunction convertToUSD(elem) {\n  return Number(elem).toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}