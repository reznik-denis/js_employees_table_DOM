{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,ICqGI,E,E,S,C,EAvBF,CAAU,CAAC,EAAE,CAAC,gBAAgB,CAAC,QAAS,WACtC,I,EAAM,EAAY,SAAS,aAAa,CAAC,SAAS,OAAO,CAAC,EAAE,CACtD,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAgB,EAAU,IAAI,G,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAEpC,EAAU,IAAI,CAAC,SAAC,CAAA,CAAG,CAAnB,EACE,IAAM,EAAQ,EAAE,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW,GACxC,EAAQ,EAAE,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW,UAE9C,AAAI,CAAa,CAAC,EAAE,CAAG,GAAM,EACpB,EAAU,EAAO,GAEjB,EAAU,EAAO,EAE5B,GAEA,CAAa,CAAC,EAAE,CAAG,CAAa,CAAC,EAAE,CAAG,EAEtC,EAAU,OAAO,CAAC,SAAC,CAAnB,EACE,EAAU,MAAM,CAAC,EACnB,EACF,E,EAhGI,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,EAAM,OAAO,CAAC,EAAE,CAExB,EAAa,AADL,EAAM,KAAK,CACA,IAAI,CAAC,EAAE,CAAC,KAAK,CAEtC,EAAM,kBAAkB,CACtB,WACC,s2BAiBH,IAAM,EAAO,SAAS,aAAa,CAAC,sBAEpC,EAAK,gBAAgB,CAAC,SAAU,SAAC,CAAjC,EACE,EAAE,cAAc,GAEhB,IAAM,EAAe,SAAS,cAAc,CAAC,QAAQ,KAAK,CAAC,IAAI,GAE/D,IAAI,EAAW,EAAc,SAI7B,IAAM,EAAmB,SAAS,cAAc,CAAC,YAAY,KAAK,CAAC,IAAI,GAEvE,IAAI,EAAW,EAAkB,aAIjC,IAAM,EAAiB,SAAS,cA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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar _loop = function(i) {\n    tHeadCells[i].addEventListener(\"click\", function() {\n        var tableBody = document.querySelector(\"table\").tBodies[0];\n        var tableRows = _to_consumable_array(tableBody.rows);\n        tableRows.sort(function(a, b) {\n            var cellA = a.cells[i].innerText.toLowerCase();\n            var cellB = b.cells[i].innerText.toUpperCase();\n            if (clicksCounter[i] % 2 === 0) return sortTable(cellA, cellB);\n            else return sortTable(cellB, cellA);\n        });\n        clicksCounter[i] = clicksCounter[i] + 1;\n        tableRows.forEach(function(row) {\n            tableBody.append(row);\n        });\n    });\n};\nvar table = document.querySelector(\"table\");\nvar tBody = table.tBodies[0];\nvar tHead = table.tHead;\nvar tHeadCells = tHead.rows[0].cells;\ntable.insertAdjacentHTML(\"afterend\", '<form class=\"new-employee-form\">\\n    <label>Name: <input id=\"name\" name=\"name\" type=\"text\" data-qa=\"name\"></label>\\n    <label>Position: <input id=\"position\" name=\"position\" type=\"text\" data-qa=\"position\"></label>\\n    <label>Office: <select id=\"office\" name=\"office\" data-qa=\"office\">\\n      <option value=\"Tokyo\">Tokyo</option>\\n      <option value=\"Singapore\">Singapore</option>\\n      <option value=\"London\">London</option>\\n      <option value=\"New York\">New York</option>\\n      <option value=\"Edinburgh\">Edinburgh</option>\\n      <option value=\"San Francisco\">San Francisco</option>\\n    </select></label>\\n    <label>Age: <input id=\"age\" name=\"age\" type=\"number\" data-qa=\"age\" required></label>\\n    <label>Salary: <input id=\"salary\" name=\"salary\" type=\"number\" data-qa=\"salary\" required></label>\\n    <button type=\"submit\">Save to table</button>\\n  </form>');\nvar form = document.querySelector(\".new-employee-form\");\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var nameEmployee = document.getElementById(\"name\").value.trim();\n    if (validation(nameEmployee, \"name\")) return;\n    var positionEmployee = document.getElementById(\"position\").value.trim();\n    if (validation(positionEmployee, \"position\")) return;\n    var offiseEmployee = document.getElementById(\"office\").value;\n    var ageEmployee = document.getElementById(\"age\").value;\n    if (validation(ageEmployee, \"age\")) return;\n    var salaryEmployee = document.getElementById(\"salary\").value;\n    var convertSalaryEmployee = convertToUSD(salaryEmployee);\n    tBody.insertAdjacentHTML(\"beforeend\", \"<tr>\\n      <td>\".concat(nameEmployee, \"</td>\\n      <td>\").concat(positionEmployee, \"</td>\\n      <td>\").concat(offiseEmployee, \"</td>\\n      <td>\").concat(ageEmployee, \"</td>\\n      <td>\").concat(convertSalaryEmployee, \"</td>\\n    </tr>\"));\n    pushNotification(10, 10, \"Success\", \"Success add.\\n New employee added succesfuly.\", \"success\");\n    form.reset();\n});\nvar clicksCounter = [\n    0,\n    0,\n    0,\n    0,\n    0\n];\nfor(var i = 0; i < tHeadCells.length; i++)_loop(i);\nvar currentActiveTr;\ntBody.addEventListener(\"click\", function(e) {\n    var newTr = e.target.closest(\"tr\");\n    newTr.classList.add(\"active\");\n    if (currentActiveTr !== newTr) {\n        if (currentActiveTr) currentActiveTr.classList.remove(\"active\");\n        currentActiveTr = newTr;\n    }\n});\ntBody.addEventListener(\"dblclick\", function(e) {\n    var changedCells = function changedCells() {\n        var inputTextValue = inputText.value.trim();\n        if (inputTextValue.length > 0 && !validateCahgeCell(inputTextValue, changeCellIndex)) {\n            if (changeCellIndex === 4) changeCells.textContent = convertToUSD(inputTextValue);\n            else changeCells.textContent = inputTextValue;\n        } else changeCells.textContent = contentCell;\n        inputText.remove();\n    };\n    var changeCells = e.target;\n    var changeCellIndex = changeCells.cellIndex;\n    var contentCell = changeCells.textContent;\n    changeCells.textContent = \"\";\n    switch(changeCellIndex){\n        case 0:\n            changeCells.insertAdjacentHTML(\"beforeend\", '<input class=\"cell-input\" id=\"changeCell\" name=\"name\" type=\"text\">');\n            break;\n        case 1:\n            changeCells.insertAdjacentHTML(\"beforeend\", '<input class=\"cell-input\" id=\"changeCell\" name=\"position\" type=\"text\">');\n            break;\n        case 2:\n            changeCells.insertAdjacentHTML(\"beforeend\", '<select class=\"cell-input\" id=\"changeCell\" name=\"office\">\\n          <option value=\"Tokyo\">Tokyo</option>\\n          <option value=\"Singapore\">Singapore</option>\\n          <option value=\"London\">London</option>\\n          <option value=\"New York\">New York</option>\\n          <option value=\"Edinburgh\">Edinburgh</option>\\n          <option value=\"San Francisco\">San Francisco</option>\\n        </select>');\n            break;\n        case 3:\n            changeCells.insertAdjacentHTML(\"beforeend\", '<input class=\"cell-input\" id=\"changeCell\" name=\"age\" type=\"number\">');\n            break;\n        case 4:\n            changeCells.insertAdjacentHTML(\"beforeend\", '<input class=\"cell-input\" id=\"changeCell\" name=\"salary\" type=\"number\">');\n            break;\n    }\n    var inputText = document.getElementById(\"changeCell\");\n    inputText.focus();\n    inputText.addEventListener(\"blur\", changedCells);\n    inputText.addEventListener(\"keydown\", function(evt) {\n        if (evt.code === \"Enter\") changedCells();\n    });\n});\nfunction pushNotification(posTop, posRight, title, description, type) {\n    var nottification = document.createElement(\"div\");\n    document.querySelector(\"body\").append(nottification);\n    nottification.classList.add(\"notification\");\n    nottification.classList.add(type);\n    nottification.setAttribute(\"data-qa\", \"notification\");\n    nottification.style.top = \"\".concat(posTop, \"px\");\n    nottification.style.right = \"\".concat(posRight, \"px\");\n    nottification.insertAdjacentHTML(\"beforeend\", '\\n    <h2 class=\"title\">'.concat(title, \"</h2>\\n    <p>\").concat(description, \"</p>\"));\n    setTimeout(function() {\n        nottification.remove();\n    }, 2000);\n}\nfunction sortTable(cellA, cellB) {\n    return cellA.localeCompare(cellB, undefined, {\n        numeric: true\n    });\n}\nfunction validation(text, type) {\n    switch(type){\n        case \"name\":\n            if (text.length < 4) {\n                pushNotification(10, 10, \"Error\", \"Name wrong.\\n Length of name should have length more than 4.\", \"error\");\n                return true;\n            }\n            break;\n        case \"age\":\n            if (text < 18 || text > 90) {\n                pushNotification(10, 10, \"Error\", \"Age wrong.\\n Age have to be more than 18 and less than 90.\", \"error\");\n                return true;\n            }\n            break;\n        case \"position\":\n            if (!text) {\n                pushNotification(10, 10, \"Error\", \"Position wrong.\\n Position have to be entered.\", \"error\");\n                return true;\n            }\n            break;\n        default:\n            return false;\n    }\n}\nfunction validateCahgeCell(text, index) {\n    switch(index){\n        case 0:\n            return validation(text, \"name\");\n        case 1:\n            return validation(text, \"position\");\n        case 3:\n            return validation(text, \"age\");\n        default:\n            return false;\n    }\n}\nfunction convertToUSD(elem) {\n    return Number(elem).toLocaleString(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        minimumFractionDigits: 0\n    });\n}\n\n//# sourceMappingURL=index.a33a86a5.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst tBody = table.tBodies[0];\nconst tHead = table.tHead;\nconst tHeadCells = tHead.rows[0].cells;\n\ntable.insertAdjacentHTML(\n  'afterend',\n  `<form class=\"new-employee-form\">\n    <label>Name: <input id=\"name\" name=\"name\" type=\"text\" data-qa=\"name\"></label>\n    <label>Position: <input id=\"position\" name=\"position\" type=\"text\" data-qa=\"position\"></label>\n    <label>Office: <select id=\"office\" name=\"office\" data-qa=\"office\">\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select></label>\n    <label>Age: <input id=\"age\" name=\"age\" type=\"number\" data-qa=\"age\" required></label>\n    <label>Salary: <input id=\"salary\" name=\"salary\" type=\"number\" data-qa=\"salary\" required></label>\n    <button type=\"submit\">Save to table</button>\n  </form>`,\n);\n\nconst form = document.querySelector('.new-employee-form');\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const nameEmployee = document.getElementById('name').value.trim();\n\n  if (validation(nameEmployee, 'name')) {\n    return;\n  }\n\n  const positionEmployee = document.getElementById('position').value.trim();\n\n  if (validation(positionEmployee, 'position')) {\n    return;\n  }\n\n  const offiseEmployee = document.getElementById('office').value;\n  const ageEmployee = document.getElementById('age').value;\n\n  if (validation(ageEmployee, 'age')) {\n    return;\n  }\n\n  const salaryEmployee = document.getElementById('salary').value;\n  const convertSalaryEmployee = convertToUSD(salaryEmployee);\n\n  tBody.insertAdjacentHTML(\n    'beforeend',\n    `<tr>\n      <td>${nameEmployee}</td>\n      <td>${positionEmployee}</td>\n      <td>${offiseEmployee}</td>\n      <td>${ageEmployee}</td>\n      <td>${convertSalaryEmployee}</td>\n    </tr>`,\n  );\n\n  pushNotification(\n    10,\n    10,\n    'Success',\n    'Success add.\\n ' + 'New employee added succesfuly.',\n    'success',\n  );\n\n  form.reset();\n});\n\nconst clicksCounter = [0, 0, 0, 0, 0];\n\nfor (let i = 0; i < tHeadCells.length; i++) {\n  tHeadCells[i].addEventListener('click', function () {\n    const tableBody = document.querySelector('table').tBodies[0];\n    const tableRows = [...tableBody.rows];\n\n    tableRows.sort((a, b) => {\n      const cellA = a.cells[i].innerText.toLowerCase();\n      const cellB = b.cells[i].innerText.toUpperCase();\n\n      if (clicksCounter[i] % 2 === 0) {\n        return sortTable(cellA, cellB);\n      } else {\n        return sortTable(cellB, cellA);\n      }\n    });\n\n    clicksCounter[i] = clicksCounter[i] + 1;\n\n    tableRows.forEach((row) => {\n      tableBody.append(row);\n    });\n  });\n}\n\nlet currentActiveTr;\n\ntBody.addEventListener('click', (e) => {\n  const newTr = e.target.closest('tr');\n\n  newTr.classList.add('active');\n\n  if (currentActiveTr !== newTr) {\n    if (currentActiveTr) {\n      currentActiveTr.classList.remove('active');\n    }\n    currentActiveTr = newTr;\n  }\n});\n\ntBody.addEventListener('dblclick', (e) => {\n  const changeCells = e.target;\n  const changeCellIndex = changeCells.cellIndex;\n  const contentCell = changeCells.textContent;\n\n  changeCells.textContent = '';\n\n  switch (changeCellIndex) {\n    case 0:\n      changeCells.insertAdjacentHTML(\n        'beforeend',\n        `<input class=\"cell-input\" id=\"changeCell\" name=\"name\" type=\"text\">`,\n      );\n      break;\n\n    case 1:\n      changeCells.insertAdjacentHTML(\n        'beforeend',\n        `<input class=\"cell-input\" id=\"changeCell\" name=\"position\" type=\"text\">`,\n      );\n      break;\n\n    case 2:\n      changeCells.insertAdjacentHTML(\n        'beforeend',\n        `<select class=\"cell-input\" id=\"changeCell\" name=\"office\">\n          <option value=\"Tokyo\">Tokyo</option>\n          <option value=\"Singapore\">Singapore</option>\n          <option value=\"London\">London</option>\n          <option value=\"New York\">New York</option>\n          <option value=\"Edinburgh\">Edinburgh</option>\n          <option value=\"San Francisco\">San Francisco</option>\n        </select>`,\n      );\n      break;\n\n    case 3:\n      changeCells.insertAdjacentHTML(\n        'beforeend',\n        `<input class=\"cell-input\" id=\"changeCell\" name=\"age\" type=\"number\">`,\n      );\n      break;\n\n    case 4:\n      changeCells.insertAdjacentHTML(\n        'beforeend',\n        `<input class=\"cell-input\" id=\"changeCell\" name=\"salary\" type=\"number\">`,\n      );\n      break;\n  }\n\n  const inputText = document.getElementById('changeCell');\n\n  inputText.focus();\n\n  inputText.addEventListener('blur', changedCells);\n\n  inputText.addEventListener('keydown', (evt) => {\n    if (evt.code === 'Enter') {\n      changedCells();\n    }\n  });\n\n  function changedCells() {\n    const inputTextValue = inputText.value.trim();\n\n    if (\n      inputTextValue.length > 0 &&\n      !validateCahgeCell(inputTextValue, changeCellIndex)\n    ) {\n      if (changeCellIndex === 4) {\n        changeCells.textContent = convertToUSD(inputTextValue);\n      } else {\n        changeCells.textContent = inputTextValue;\n      }\n    } else {\n      changeCells.textContent = contentCell;\n    }\n\n    inputText.remove();\n  }\n});\n\nfunction pushNotification(posTop, posRight, title, description, type) {\n  const nottification = document.createElement('div');\n\n  document.querySelector('body').append(nottification);\n\n  nottification.classList.add('notification');\n  nottification.classList.add(type);\n  nottification.setAttribute('data-qa', 'notification');\n  nottification.style.top = `${posTop}px`;\n  nottification.style.right = `${posRight}px`;\n\n  nottification.insertAdjacentHTML(\n    'beforeend',\n    `\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>`,\n  );\n\n  setTimeout(() => {\n    nottification.remove();\n  }, 2000);\n}\n\nfunction sortTable(cellA, cellB) {\n  return cellA.localeCompare(cellB, undefined, { numeric: true });\n}\n\nfunction validation(text, type) {\n  switch (type) {\n    case 'name':\n      if (text.length < 4) {\n        pushNotification(\n          10,\n          10,\n          'Error',\n          'Name wrong.\\n ' + 'Length of name should have length more than 4.',\n          'error',\n        );\n\n        return true;\n      }\n      break;\n\n    case 'age':\n      if (text < 18 || text > 90) {\n        pushNotification(\n          10,\n          10,\n          'Error',\n          'Age wrong.\\n ' + 'Age have to be more than 18 and less than 90.',\n          'error',\n        );\n\n        return true;\n      }\n      break;\n\n    case 'position':\n      if (!text) {\n        pushNotification(\n          10,\n          10,\n          'Error',\n          'Position wrong.\\n ' + 'Position have to be entered.',\n          'error',\n        );\n\n        return true;\n      }\n      break;\n\n    default:\n      return false;\n  }\n}\n\nfunction validateCahgeCell(text, index) {\n  switch (index) {\n    case 0:\n      return validation(text, 'name');\n\n    case 1:\n      return validation(text, 'position');\n\n    case 3:\n      return validation(text, 'age');\n\n    default:\n      return false;\n  }\n}\n\nfunction convertToUSD(elem) {\n  return Number(elem).toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","currentActiveTr","_loop","tHeadCells","addEventListener","tableBody","document","querySelector","tBodies","tableRows","_array_without_holes","isArray","rows","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sort","a","b","cellA","cells","innerText","toLowerCase","cellB","toUpperCase","clicksCounter","sortTable","forEach","row","append","table","tBody","tHead","insertAdjacentHTML","form","e","preventDefault","nameEmployee","getElementById","value","trim","validation","positionEmployee","offiseEmployee","ageEmployee","convertSalaryEmployee","convertToUSD","concat","pushNotification","reset","posTop","posRight","title","description","type","nottification","createElement","classList","add","setAttribute","style","top","right","setTimeout","remove","localeCompare","undefined","numeric","text","elem","Number","toLocaleString","currency","minimumFractionDigits","newTr","target","closest","changedCells","inputTextValue","inputText","validateCahgeCell","index","changeCellIndex","changeCells","textContent","contentCell","cellIndex","focus","evt","code"],"version":3,"file":"index.a33a86a5.js.map"}